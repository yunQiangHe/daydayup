/**
 * 1.什么是跨域？
 * 协议+域名+端口
 * 在实际生成环境中，肯定会有很多台服务器之间交互，地址和端口都可能不同，怎么办？
 *
 * 2.解决跨域问题的方案
 * - 2.1最早的解决方案，利用script标签可以跨域的原理实现。
 * - 2.2利用nginx反向代理把跨域为不跨域，支持各种请求方式
 * - 2.3CORS规范化的跨域请求解决方案，安全可靠。
 *
 * 3 cors解决跨域
 * - CORS是一个W3C标准，全称是"跨域资源共享"（Cross-origin resource sharing）。
 * - CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于IE10。
 */

// 浏览器会将ajax请求分为两类，其处理方案略有差异：简单请求、特殊请求。

/**
 * 如果跨域请求要想操作cookie，需要满足3个条件：
 *
 * 服务的响应头中需要携带Access-Control-Allow-Credentials并且为true。
 * 浏览器发起ajax需要指定withCredentials 为true
 * 响应头中的Access-Control-Allow-Origin一定不能为*，必须是指定的域名
 */

// 不符合简单请求的条件，会被浏览器判定为特殊请求,，例如请求方式为PUT。
// 特殊请求会在正式通信之前，增加一次HTTP查询请求，称为"预检"请求（preflight）。